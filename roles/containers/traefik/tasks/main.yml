---
- name: Create external docker network
  docker_network:
    name: "traefik_proxy"

- name: Make sure traefik container is created and running
  docker_container:
    name: "traefik"
    image: "traefik:v2.9"
    pull: yes
    networks:
      - name: traefik-public
    ports:
      - "80:80"
      - "443:443"
    state: 'started'
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
    labels:
      # Enable Traefik for this service, to make it available in the public network
      traefik.enable: true
      # Use the traefik-public network (declared below)
      traefik.docker.network: traefik-public
      # admin-auth middleware with HTTP Basic auth
      # Using the environment variables USERNAME and HASHED_PASSWORD
      traefik.http.middlewares.admin-auth.basicauth.users: admin:{{ treafik_password | password_hash(hashtype="md5") }}
      # Uses the environment variable TRAEFIK_DOMAIN
      traefik.http.routers.traefik-public-http.rule: Host(`{{ traefik_domain }}`)
      traefik.http.routers.traefik-public-http.entrypoints: http
      # Use the special Traefik service api@internal with the web UI/Dashboard
      traefik.http.routers.traefik-public-http.service: api@internal
      # Enable HTTP Basic auth, using the middleware created above
      # Define the port inside of the Docker service to use
      traefik.http.services.traefik-public.loadbalancer.server.port: 8080
      ######################################################################
      # https-redirect middleware to redirect HTTP to HTTPS
      # It can be re-used by other stacks in other Docker Compose files
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
      # traefik-http to use the middleware to redirect to https
      traefik.http.routers.traefik-public-http.middlewares: https-redirect
      # traefik-https the actual router using HTTPS
      # Uses the environment variable DOMAIN
      traefik.http.routers.traefik-public-https.rule: Host(`{{ traefik_domain }}`)
      traefik.http.routers.traefik-public-https.entrypoints: https
      traefik.http.routers.traefik-public-https.tls: true
      # Use the special Traefik service api@internal with the web UI/Dashboard
      traefik.http.routers.traefik-public-https.service: api@internal
      # Use the "le" (Let's Encrypt) resolver created below
      traefik.http.routers.traefik-public-https.tls.certresolver: le
      # Enable HTTP Basic auth, using the middleware created above
      traefik.http.routers.traefik-public-https.middlewares: admin-auth
    volumes:
      - "{{ docker_dir }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    etc_hosts:
      "host.docker.internal": "host-gateway"
    restart_policy: unless-stopped
